
Grammar for Lox (precdence lowest to highest)

program             -> decleration* EOF;
decleration         -> var_decl | statement ;
var_decl            -> "var" IDENTIFIER ( "=" expression )? ";" ;
statement           -> expr_statement | print_statement | block | if_statement ;
block               -> "{" decleration* "}" ;
if_statement        -> "if" "(" expression ")" statement ("else" statement)?;
expr_statement      -> expression ";";
print_statement     -> "print" expression ";";
comma_expression    -> expression ("," expression)*;
ternary             -> expression | expression "?" ternary ":" ternary;// example expr ? true expr : false expr
expression          -> assignment ;
assignment          -> IDENTIFIER "=" assignment | logic_or ;
logic_or            -> logic_and ("or" logic_and)* ;
logic_and           -> equality ("and" equality)* ;
equality            -> comparison (( "!=" | "==" )  comparison)* ; // allowing expression like a == b, a != b, a == b != c
comparison          -> term ((">" | ">=" | "<" | "<=") term)* ;
term                ->  factor (("+" | "-") factor)* ;// allow a + b, a - b, a + b / c
factor              ->  unary ( ("/" | "*") unary)* ;
unary               -> ("!", "-") unary | primary ;
primary             -> NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")" | IDENTIFIER ;
